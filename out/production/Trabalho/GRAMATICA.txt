Onde chamar o Declaração e Comando tem q colocar o ; depois


Start -> {(Declaração; | Bloco_ou_Comando)} OK
Bloco_ou_Comando -> Comando | Bloco OK
Bloco -> "{"{Comando}"}" OK
Tipo -> int | float | string | char OK
Declaração -> Tipo Declaração_Init {,Declaração_Init} | const id = const_value OK
Declaração_Init -> id [<- const_value] OK
Escrita -> "("Expressão {, Expressão} ")" OK
Comando -> id Comando_Fat ; | Repetição | Teste | ; | readln"("id")" ; | write Escrita ; | writeln Escrita ; OK
Comando_Fat ->  <- Expressão | "["Expressão"]" <- Expressão OK
Repetição -> while Expressão Bloco_ou_Comando OK
Teste -> if Expressão Bloco_ou_Comando [else Bloco_ou_Comando] OK
Operadores_Relacional -> = | != | < | > | <= | >= OK
Expressão -> Expressão1 { Operadores_Relacional Expressão1} OK
Expressão1 -> Expressão2 {(- | + | || ) Expressão2} OK
Expressão2 -> Expressão3 {(* | && | / | div | mod) Expressão3} OK
Expressão3 -> [!] Expressão4 OK
Expressão4 -> ( (int | float) "("Expressão")"  | Expressão5) OK
Expressão5 -> "(" Expressão ")" | Expressão6 OK





Expressão6 -> const_value | id ["[" Expressão "]"]






First
Start: int , float , string , char , const , id, ;, readln, write, writeln, while, if, {
Bloco_ou_Comando: id, ;, readln, write, writeln, while, if, {
Bloco: {
Comando: id, ;, readln, write, writeln, while, if
Comando_Fat: <- | [
Repetição: while
Teste: if
Declaração: int | float | string | char | const
Declaração_Init: id
Escrita: (
Operadores_Relacional: = | != | < | > | <= | >=
Expressão6: const_value, id 
Expressão5: (, const_value, id 
Expressão4: int, float, (, const_value, id 
Expressão3: !, int, float, (, const_value, id 
Expressão2: !, int, float, (, const_value, id 
Expressão1: !, int, float, (, const_value, id
Expressão: !, int, float, (, const_value, id




PERGUNTA ISSO AMANHÃ
int a <- 5, b <- 6, c <- 7